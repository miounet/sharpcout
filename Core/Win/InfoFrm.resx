<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BcRtICAAgON0T0BmERAAqDSdBkRtICAAgON0U0DeJCAAUGE6D8ibHQfk23rxZX1TPQEBgIrSUUDcBLfB
        jcj1wggIAICAAABK0z0BmUlAAKDSdBoQtYGAAACO0w0BubzHSzPntwWkuS0giT71zfFL65pjF8i5tU2x
        XwEAosO73Tveu94737vfDXAL3AS3wY3I9cIICACgmwLyaltA5urkfhpynYZdoaGXaPhvxG/2fwCA6PBu
        9473rvfO9+53A9yCTEDUhq4E5A2dfKOG/F7DrtTQyzT8QjlPb+arEABARHi3e8d713vne/e7AW5BqQG5
        uTGeuKEhluiroZfXNcUukt/ozX4NAIgO73bveO9673zvfjfALSglIAt08gANuUXDrtfQKzW8p1ysN7sI
        ABAd3u3e8d713vne/W6AW1B0QF48FpBFzfHEHRpye0MsfpOGXqvhjkgvvdnlAIDo8G73jveu98737ncD
        3AI3wW3oSkCW6OR7NGSQhg3Q0Js1/Hrpqze7GgAQHd7t3vHe9d753v1ugFtQSkDe1skPaMhQDbtTQ2/X
        8P5yg96sHwAgOrzbveO9673zvfvdALeguID8TAGZ8UYuIKua4omRGjJCw4bWNcfv0fCBcpvebAAAIDq8
        2zM7XrveO9+73w1wCzIBURvciFwvrF1AvqUXpx4LyLtNscSohljiifpYfISGPqA3GSL3yN0AgEjxbh/i
        Xe+d793vBrgFboLb4EbkemGFAtKir9fr5AkaMk7DRmvoYxr+sAyXYQCASPFuf9i73jvfu98NcAvchK4G
        ZGNjLDFFQ16ob44/q6FjNXyMjJInAQCR4t0+xrveO9+73w1wC7oakJS+3qyTp2vINA2boqHPafizMl7G
        AQAixbvdFwvPeed797sBboGbUFRApkyf1xYQDZgh0zXsRQ19XsMnyoTsGwEAosO7faJ3vXe+d78b4Ba4
        CW4DAQEAhOn2gLzqARr2koZO1vDcbSy/EQAgOrzbn/Ou98737ncD3IJSAvKJTp7pARr2soZO0XBfhTgi
        vhIBAESHd/vz3vXe+d79boBbUEpAPtXJszxAw6Zp6FQN91XIpOwbAQCiw7t9sne9d753vxvgFhQdkBde
        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
        iS79pf8HB2UcuiXjFdkAAAAASUVORK5CYII=
</value>
  </data>
</root>